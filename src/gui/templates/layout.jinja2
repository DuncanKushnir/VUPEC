<!DOCTYPE html>

<html lang="en">

<head>
    <meta charset="utf-8"/>
    <title>VUPEC</title>
    <meta name="theme-color" content="#5eb9d7"/>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
    <script type="text/javascript">
        window.addEventListener('keydown',function(e){if(e.keyIdentifier=='U+000A'||e.keyIdentifier=='Enter'||e.keyCode==13){if(e.target.nodeName=='INPUT'&&e.target.type=='text'){e.preventDefault();return false;}}},true);
    </script>
</head>

<body>

<header>
    <div class="contentheader">
    <div class="title_area">
        <h2 id="main_title">VUPEC: Vehicle Use Phase Energy Calculator - Basic Interface</h2>
        <h2 id="footer_text">Funded by  <a href="http://www.energimyndigheten.se/"
                                           target="_blank" class="title_link">
        EnergiMyndigheten </a> as part of ERA-NET cofunding for EU HORIZON 2020.</h2>
    </div>
    </div>
</header>

<!-- Fixed size after header-->
<form method="POST" action="/submit" id="parameter_form">
<div class="content">
    <!-- Always on top. Fixed position, fixed width, relative to content width-->
    <div class="sidebar_left">
        <div class="leftwrapper">
            {% block setup_subform %}{% endblock %}
        </div>
    </div>
    <div class="sidebar_right">
        <div class="rightwrapper">
            {% block result_subform %}{% endblock %}
        </div>
    </div>

    <!-- Scrollable div with main content -->
    <div class="scrollable_parameters">

        <div class="generic_spacing">
            <div class="form_wrapper">
                {% block physical_subform %}{% endblock %}
            </div>
        </div>

        <div class="generic_spacing">
            <div class="form_wrapper">
                {% block accessory_subform %}{% endblock %}
            </div>
        </div>

        <div class="generic_spacing" id="battery_block">
            <div class="form_wrapper">
                {% block battery_subform %}{% endblock %}
            </div>
        </div>

        <div class="generic_spacing">
            <div class="form_wrapper">
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
                indefinite amounts of stuff can be scrolled</br>
            </div>
        </div>
    </div>
</div>
</form>




</body>

</html>

<script>
    // Global access to elements
    let manufacturer_select = document.getElementById('manufacturer');
    let model_select = document.getElementById('model');
    let drivecycle_select = document.getElementById('drivecycle');
    let form_data = document.getElementById('parameter_form');
    let phys_data = document.getElementById('physical_subform');
    let acc_data = document.getElementById('accessory_subform');
    let batt_data = document.getElementById('battery_subform');

    // Do stuff
    function lookup_models() {
        let manufacturer = manufacturer_select.value;
        fetch('/data/models_by_manufacturer/' + manufacturer)
            .then(function(response) {
                response.json()
                    .then(function(data) {
                        let option_html = '';
                        for (let model of data) {
                            option_html += '<option value="' + model.id + '">' + model.id + '</option>';
                        }
                        model_select.innerHTML = option_html;
                    });

            });
    }

    function change_drivecycle_image() {
        let drivecycle = drivecycle_select.value;
        fetch('/data/dc/' + drivecycle)
            .then(function(response) {
                response.json()
                    .then(function (data) {
                        document.getElementById("dc_image").src=data.src;
                    });
            });
    }

    function fill_base_values(){
        let manufacturer = manufacturer_select.value;
        let model = model_select.value;
        let drivecycle = drivecycle_select.value;
        fetch('/data/getbase/' + manufacturer + '/' + model + '/' + drivecycle)
            .then(function(response) {
                response.json()
                    .then(function (data) {
                        console.log(data);
                        // clear set values
                        clear_from_dict(data.orig);
                        // Fill from database
                        update_from_dict(data.data);
                        // Fill model results
                        update_from_dict(data.result);
                        battery_visible();
                    })
            });
    }
    function clear_from_dict(dat) {
        for (var key in dat) {
            if (dat.hasOwnProperty(key)) {
                let element = document.getElementById(key);

                if (element != null) {
                    element.value = '';
                }

            }
        }
    }

    function update_from_dict(dat) {
        for (var key in dat) {
            if (dat.hasOwnProperty(key)) {
                let element = document.getElementById(key);
                //console.log(key+': '+data.data[key]);
                if (element!=null) {
                    element.textContent = dat[key];
                }

            }
        }
    }

    function toggle_visibility(id) {
        let state = document.getElementById(id).style.display;
            if (state == 'block') {
                document.getElementById(id).style.display = 'none';
            } else {
                document.getElementById(id).style.display = 'block';
            }
    }

    function make_visible(id) {
        document.getElementById(id).style.display = 'block';
    }

    function make_invisible(id) {
        document.getElementById(id).style.display = 'none';
    }

    function changed_input() {
        console.log('hmmm')
    }

    function battery_visible() {
        let batcap = document.getElementById("battery_capacity_base").textContent;
        if ( batcap == 0) {
            make_invisible("battery_block");
            make_invisible("battery_stats");
        } else {
            make_visible("battery_block");
            make_visible("battery_stats");
        }
    }


    // State change triggers
    drivecycle_select.onchange = function () {
        change_drivecycle_image();
        fill_base_values();
    };

    manufacturer_select.onchange = function () {
        lookup_models();
        fill_base_values();
    };

    model_select.onchange = function () {
        fill_base_values();
    };

    form_data.onchange = function () {
        console.log('Change');
        fetch('/updatescenario',
            {method:'POST',
            body: new FormData(form_data)})
            .then(function(response) {
                response.json()
                    .then(function (data) {
                        console.log(data);
                        update_from_dict(data.result);
                    })
            });
    };


    window.onload = function () {
        lookup_models();
        change_drivecycle_image();
        fill_base_values();
    };


</script>
